# Generic Makefile for a LaTeX paper
# Colin Perkins <csp@csperkins.org>

# The tools used to capture, prepare, or otherwise process data, and generate
# results. The tools should be placed in the bin/ directory, from source code
# located in the src/ directory. The files listed below in $(TEX_GENERATED),
# $(FIGURES_GENERATED), and $(OTHER_GENERATED) will likely depend on these
# tools. These tools will be removed by "make clean". 
TOOLS = 

# The base file name for the LaTeX source.  The files $(TEX_BASE).tex and
# $(TEX_BASE).bib must exist, and contain the paper text and bibliography
# (this Makefile only supports a single .bib file).
TEX_BASE = paper

# The $(TEX_STATIC) and $(TEX_GENERATED) variables should include all .tex 
# files included (\input) into $(TEX_BASE).tex (full file names, including
# the .tex extension).  The files in $(TEX_GENERATED) must be generated by 
# this Makefile, and will be removed by "make clean". The files listed in
# $(TEX_STATIC) are static and will not be removed.
TEX_STATIC    = 
TEX_GENERATED =

# A list of any figures included in the LaTeX document. These need to be in PDF
# format, and the file names must include the .pdf extension. The files listed
# in $(FIGURES_GENERATED) must be built by this Makefile, and will be removed
# by "make clean". The files in $(FIGURES_STATIC) are static graphics that are
# not removed by "make clean".
FIGURES_STATIC    =
FIGURES_GENERATED = 

# A list of any other files generated by running this Makefile. These are
# likely to be intermediate results, from which the files in $(TEX_GENERATED)
# and $(FIGURES_GENERATED) are built. $(TEX_BASE).pdf does not depend on the
# files listed here, but the $(TEX_GENERATED) and $(FIGURES_GENERATED) files
# will likely do so. These files will be removed by "make clean".
OTHER_GENERATED = 

# Master build rule:
all: $(TOOLS) $(TEX_BASE).pdf

# Add paper-specific rules here, to build $(TOOLS): 



# Add paper-specific rules here, to build $(OTHER_GENERATED):



# Add paper-specific rules here, to build $(FIGURES_GENERATED):



# Add paper-specific rules here, to build $(TEX_GENERATED): 


# Pattern rules to build plots using gnuplot. These require the data
# to be plotted be in figures/%.dat, while the script to control the
# plot is in figures/%.gnuplot. The script figures/%.gnuplot-pdf (or
# figures/%.gnuplot-svg) is loaded before the main gnuplot script,
# and should call "set terminal pdf ..." and "set output ...", so
# allowing the main script to be terminal independent.
figures/%.pdf: figures/%.gnuplot-pdf figures/%.gnuplot figures/%.dat
	gnuplot figures/$*.gnuplot-pdf figures/$*.gnuplot

figures/%.svg: figures/%.gnuplot-svg figures/%.gnuplot figures/%.dat
	gnuplot figures/$*.gnuplot-svg figures/$*.gnuplot

# Rule to build the final PDF file:
$(TEX_BASE).pdf: $(TEX_BASE).tex $(TEX_BASE).bib $(TEX_STATIC) $(TEX_GENERATED) $(FIGURES_STATIC) $(FIGURES_GENERATED)
	@bin/latex-build.sh     $(TEX_BASE)
	@bin/check-pdf-fonts.sh $(TEX_BASE).pdf $(TEX_BASE).fonts
	@bin/check-for-duplicate-words.sh $(TEX_BASE).tex $(TEX_STATIC) $(TEX_GENERATED)
	@bin/check-for-todo.sh            $(TEX_BASE).tex $(TEX_STATIC) $(TEX_GENERATED)

# A function that acts like the xargs command, calling itself recursively 
# to execute the command specified as the first paremeter for each of the
# arguments, 1000 arguments at a time. You are not expected to understand 
# this.
define xargs
$(if $(2),$(1) $(wordlist 1,1000,$(2)))
$(if $(word 1001,$(2)),$(call xargs,$(1),$(wordlist 1001,$(words $(2)),$(2))))
endef

# A function to "rm -f" a list of files. This uses the previously defined 
# xargs function, so works with long file lists that would otherwise fail 
# with "argument list too long" if passed directly to the shell.
define remove
$(call xargs,rm -f,$(1))
endef

clean:
	$(call remove,$(TOOLS))
	$(call remove,$(TEX_BASE).pdf $(TEX_BASE).aux $(TEX_BASE).log $(TEX_BASE).blg $(TEX_BASE).bbl $(TEX_BASE).out $(TEX_BASE).fonts)
	$(call remove,$(TEX_GENERATED))
	$(call remove,$(FIGURES_GENERATED)) 
	$(call remove,$(OTHER_GENERATED))

# vim: set ts=2 sw=2 tw=0 ai:
